'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDisplayName = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactFela = require('react-fela');

var _mergeThemes = require('./mergeThemes');

var _mergeThemes2 = _interopRequireDefault(_mergeThemes);

var _displayName = require('./displayName');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-line behance/no-deprecated
const getDisplayName = exports.getDisplayName = (0, _displayName.hocDisplayName)('Themed'); /* eslint-disable behance/no-deprecated */


const applyTheme = (ComponentToWrap, ...themes) => {
  class ThemedComponent extends _react.Component {
    render() {
      return _react2.default.createElement(
        _reactFela.ThemeProvider,
        { theme: (0, _mergeThemes2.default)(this.props.theme || {}, ...themes) },
        _react2.default.createElement(ComponentToWrap, this.props)
      );
    }
  }

  ThemedComponent._isFelaComponent = true;
  ThemedComponent.propTypes = {
    theme: _propTypes2.default.object
  };

  const WithThemeHOC = (0, _reactFela.withTheme)(ThemedComponent);
  (0, _displayName.addDisplayName)(WithThemeHOC, ComponentToWrap, getDisplayName);

  return WithThemeHOC;
};

exports.default = applyTheme;