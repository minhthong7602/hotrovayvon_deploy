'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactsvgs = require('./reactsvgs');

var _reactsvgs2 = _interopRequireDefault(_reactsvgs);

var _iconTypes = require('./iconTypes');

var _iconTypes2 = _interopRequireDefault(_iconTypes);

var _cfStyleContainer = require('cf-style-container');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DEFAULT_HEIGHT = 15;

const getHeight = size => {
  let height;
  switch (size) {
    case '1.2x':
      height = 18;
      break;
    case '1.5x':
      height = 22;
      break;
    case '2x':
      height = 30;
      break;
    case '2.5x':
      height = 37;
      break;
    case '3x':
      height = 45;
      break;
    case '3.5x':
      height = 52;
      break;
    case '4x':
      height = 60;
      break;
    default:
      height = DEFAULT_HEIGHT;
  }
  return height;
};

const getFill = (color, theme) => {
  let fill;
  switch (color) {
    case 'default':
      fill = theme.colors.cement;
      break;
    case 'primary':
      fill = theme.colors.marine;
      break;
    case 'success':
      fill = theme.colors.grass;
      break;
    case 'warning':
      fill = theme.colors.carrot;
      break;
    case 'danger':
      fill = theme.colors.apple;
      break;
    case 'black':
      fill = theme.colorBlack;
      break;
    case 'white':
      fill = theme.colorWhite;
      break;
    default:
      fill = theme.colorBlack;
  }
  return fill;
};

const iconStyles = ({ theme, size, color }) => ({
  height: size ? getHeight(size) : DEFAULT_HEIGHT,
  fill: color ? getFill(color, theme) : theme.colorBlack
});

class Icon extends _react2.default.Component {
  render() {
    const Svg = _reactsvgs2.default[this.props.type];

    const { label, className } = this.props;

    return _react2.default.createElement(Svg, { className: className, label: label ? label : '' });
  }
}

Icon.propTypes = {
  className: _propTypes2.default.string.isRequired,
  label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.oneOf([false])]).isRequired,
  type: _propTypes2.default.oneOf(_iconTypes2.default).isRequired,

  color: _propTypes2.default.oneOf(['default', 'primary', 'success', 'warning', 'danger', 'black', 'white']),

  size: _propTypes2.default.oneOf(['1.2x', '1.5x', '2x', '2.5x', '3x', '3.5x', '4x'])
};

Icon.displayName = 'Icon';

exports.default = (0, _cfStyleContainer.createComponent)(iconStyles, Icon);